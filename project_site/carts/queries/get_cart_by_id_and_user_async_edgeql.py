# AUTOGENERATED FROM 'project_site/carts/queries/get_cart_by_id_and_user.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations

import dataclasses
import uuid

import edgedb


class NoPydanticValidation:
    @classmethod
    def __get_validators__(cls):
        from pydantic.dataclasses import dataclass as pydantic_dataclass

        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class GetCartByIdAndUserResult(NoPydanticValidation):
    id: uuid.UUID
    user: GetCartByIdAndUserResultUser
    products: list[GetCartByIdAndUserResultProductsItem]
    quantity: int


@dataclasses.dataclass
class GetCartByIdAndUserResultProductsItem(NoPydanticValidation):
    id: uuid.UUID


@dataclasses.dataclass
class GetCartByIdAndUserResultUser(NoPydanticValidation):
    id: uuid.UUID


async def get_cart_by_id_and_user(
    executor: edgedb.AsyncIOExecutor,
    *,
    cart_id: uuid.UUID,
    user_id: uuid.UUID,
) -> GetCartByIdAndUserResult | None:
    return await executor.query_single(
        """\
        select Cart {user,products,quantity} filter (Cart.id=<uuid>$cart_id) and (User.id=<uuid>$user_id);\
        """,
        cart_id=cart_id,
        user_id=user_id,
    )
