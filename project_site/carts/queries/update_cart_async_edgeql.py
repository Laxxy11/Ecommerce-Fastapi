# AUTOGENERATED FROM 'project_site/carts/queries/update_cart.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations

import dataclasses
import uuid

import edgedb


class NoPydanticValidation:
    @classmethod
    def __get_validators__(cls):
        from pydantic.dataclasses import dataclass as pydantic_dataclass

        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class UpdateCartResult(NoPydanticValidation):
    id: uuid.UUID
    quantity: int
    products: list[UpdateCartResultProductsItem]
    user: UpdateCartResultUser


@dataclasses.dataclass
class UpdateCartResultProductsItem(NoPydanticValidation):
    id: uuid.UUID


@dataclasses.dataclass
class UpdateCartResultUser(NoPydanticValidation):
    id: uuid.UUID


async def update_cart(
    executor: edgedb.AsyncIOExecutor,
    *,
    cart_id: uuid.UUID,
    user_id: uuid.UUID,
    quantity: int,
    product_id: uuid.UUID,
) -> UpdateCartResult | None:
    return await executor.query_single(
        """\
        select (
            update Cart filter.id=<uuid>$cart_id and  .user.id=<uuid>$user_id
            set{

                quantity:= <int64>$quantity,
                products := (select Product filter .id =<uuid>$product_id ),
                user:=(select User filter .id =<uuid>$user_id),
            }       
        )
        {
           quantity,products,user
        }\
        """,
        cart_id=cart_id,
        user_id=user_id,
        quantity=quantity,
        product_id=product_id,
    )
