# AUTOGENERATED FROM 'project_site/product/queries/get_product_by_id.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations

import dataclasses
import datetime
import uuid

import edgedb


class NoPydanticValidation:
    @classmethod
    def __get_validators__(cls):
        from pydantic.dataclasses import dataclass as pydantic_dataclass

        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class GetProductByIdResult(NoPydanticValidation):
    id: uuid.UUID
    title: str
    description: str | None
    price: float
    user: GetProductByIdResultUser
    categories: list[GetProductByIdResultCategoriesItem]
    created_at: datetime.datetime | None
    updated_at: datetime.datetime | None


@dataclasses.dataclass
class GetProductByIdResultCategoriesItem(NoPydanticValidation):
    id: uuid.UUID


@dataclasses.dataclass
class GetProductByIdResultUser(NoPydanticValidation):
    id: uuid.UUID


async def get_product_by_id(
    executor: edgedb.AsyncIOExecutor,
    *,
    product_id: uuid.UUID,
) -> GetProductByIdResult | None:
    return await executor.query_single(
        """\
        select
        Product 
        {title,description,
        price,user,
        categories,
        created_at,updated_at} 
        filter (Product.id=<uuid>$product_id);\
        """,
        product_id=product_id,
    )
