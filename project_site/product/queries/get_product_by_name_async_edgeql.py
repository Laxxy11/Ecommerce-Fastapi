# AUTOGENERATED FROM 'project_site/product/queries/get_product_by_name.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations

import dataclasses
import datetime
import uuid

import edgedb


class NoPydanticValidation:
    @classmethod
    def __get_validators__(cls):
        from pydantic.dataclasses import dataclass as pydantic_dataclass

        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class GetProductByNameResult(NoPydanticValidation):
    id: uuid.UUID
    title: str
    description: str | None
    price: float
    categories: list[GetProductByNameResultCategoriesItem]
    created_at: datetime.datetime | None
    updated_at: datetime.datetime | None


@dataclasses.dataclass
class GetProductByNameResultCategoriesItem(NoPydanticValidation):
    id: uuid.UUID
    name: str


async def get_product_by_name(
    executor: edgedb.AsyncIOExecutor,
    *,
    title: str,
) -> GetProductByNameResult | None:
    return await executor.query_single(
        """\
        select Product
        {title,description,price,categories:{name},
        created_at,updated_at} 
        filter (Product.title=<str>$title);\
        """,
        title=title,
    )
