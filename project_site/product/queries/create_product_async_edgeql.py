# AUTOGENERATED FROM 'project_site/product/queries/create_product.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations

import dataclasses
import datetime
import uuid

import edgedb


class NoPydanticValidation:
    @classmethod
    def __get_validators__(cls):
        from pydantic.dataclasses import dataclass as pydantic_dataclass

        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class CreateProductResult(NoPydanticValidation):
    id: uuid.UUID
    title: str
    description: str | None
    price: float
    categories: list[CreateProductResultCategoriesItem]
    created_at: datetime.datetime | None


@dataclasses.dataclass
class CreateProductResultCategoriesItem(NoPydanticValidation):
    id: uuid.UUID
    name: str


async def create_product(
    executor: edgedb.AsyncIOExecutor,
    *,
    title: str,
    description: str,
    price: float,
    categories: list[str],
) -> CreateProductResult:
    return await executor.query_single(
        """\
        select(insert Product{
            title:=<str>$title,
            description:=<str>$description,
            price:=<float64>$price,
            categories:=(select Category filter .name in array_unpack(<array<str>>$categories))
        })
        {
            title,description,price,categories:{id, name},created_at
        };\
        """,
        title=title,
        description=description,
        price=price,
        categories=categories,
    )
